<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
        http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
	version="2.1">

	<!-- Define a Persistence Unit (PU) for JPA -->
	<persistence-unit name="rohan">
		
		<!-- Hibernate JPA Provider -->
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
		<!-- Cache mode for JPA entities -->
		<!-- ENABLE_SELECTIVE â†’ Only entities explicitly marked with @Cacheable(true) are cached -->
		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
		
		<properties>
			<!-- JDBC driver for MySQL -->
			<property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />
			
			<!-- Database connection URL -->
			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/assignment_db" />
			
			<!-- Database username -->
			<property name="javax.persistence.jdbc.user" value="root" />
			
			<!-- Database password -->
			<property name="javax.persistence.jdbc.password" value="root" />
			
			<!-- Show SQL queries in the console -->
			<property name="hibernate.show_sql" value="true" />
			
			<!-- Schema auto-update -->
			<!-- Possible values: none | validate | update | create | create-drop -->
			<property name="hibernate.hbm2ddl.auto" value="update" />
			
			<!-- MySQL 8 dialect for Hibernate -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL8Dialect" />
  			
			<!-- ===== Second Level Cache Configuration ===== -->
			
			<!-- Enable second-level cache -->
			<property name="hibernate.cache.use_second_level_cache" value="true" />
			
			<!-- Define cache region factory (EhCache) -->
			<property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
			
			<!-- Optional: Enable query cache (if you want caching for HQL/JPQL queries) -->
			<!-- <property name="hibernate.cache.use_query_cache" value="true" /> -->
			
		</properties>
	</persistence-unit>
</persistence>
